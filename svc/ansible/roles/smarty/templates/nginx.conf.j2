
# the upstream component nginx needs to connect to
upstream flask {
    # server unix:/tmp/smarty-app.sock; # for a file socket
    server 127.0.0.1:5555; # for a web port socket
}

# redirect to HTTPS
# server {
#    # the port your site will be served on, default_server indicates that this server block
#    # is the block to use if no blocks match the server_name
#    listen      80 default_server;
#    listen [::]:80 default_server;
#
#    # the domain name it will serve for
#    server_name {{ application_domain }} www.{{ application_domain }};
#    return 301 https://$server_name$request_uri;
#}

server {
    listen      80 default_server;
    listen [::]:80 default_server;
    listen      443 ssl default_server;
    listen [::]:443 ssl default_server;

    server_name {{ application_domain }} www.{{ application_domain }};
    include snippets/ssl-{{ application_domain }}.conf;
    include snippets/ssl-params.conf;

    charset     utf-8;

    # max upload size
    client_max_body_size 1M;

    # certbot verification location
    location '/.well-known/acme-challenge' {
        root        /var/www/{{ application_domain }};
    }

    # Flask media
    #location /media  {
    #    alias /home/docker/persistent/media;  # your Flask project's media files - amend as required
    #}

    location /static {
        alias /var/www/static;
    }

    # Finally, send all non-media requests to the Flask server.
    location / {
        # uwsgi_pass  flask;
        # include     /home/pi/smarty/svc/ops/uwsgi_params;
        proxy_pass       http://flask;
        proxy_set_header Host      $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
